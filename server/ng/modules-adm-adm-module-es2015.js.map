{"version":3,"sources":["./src/app/modules/adm/adm.component.ts","./src/app/modules/adm/adm.component.html","./src/app/modules/adm/adm.module.ts","./src/app/modules/clinics/clinic.module.ts","./src/app/modules/clinics/clinic.service.ts","./src/app/modules/clinics/clinic/clinic.component.ts","./src/app/modules/clinics/clinic/clinic.component.html","./src/app/modules/clinics/clinic/clinic.resolver.ts","./src/app/modules/clinics/clinics/clinics.component.ts","./src/app/modules/clinics/clinics/clinics.component.html","./src/app/modules/clinics/clinics/clinics.resolver.ts"],"names":[],"mappings":"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","file":"modules-adm-adm-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core'\nimport { AuthService } from '../auth/auth.service'\n\n@Component({\n\tselector: 'app-adm',\n\ttemplateUrl: './adm.component.html',\n\tstyleUrls: ['./adm.component.css']\n})\nexport class AdmComponent implements OnInit {\n\n\tconstructor (private authService: AuthService) { }\n\n\tngOnInit (): void {\n\t}\n\n\tlogout () {\n\t\tthis.authService.logout()\n\t}\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light justify-content-between\">\n\t<a class=\"navbar-brand\" href=\"#\">Sorria</a>\n\t<div class=\"collapse navbar-collapse\">\n\t\t<div class=\"navbar-nav\">\n\t\t\t<a class=\"nav-link\" [routerLink]=\"['/admin/clinicas']\">Clínicas</a>\n\t\t\t<a class=\"nav-link\" href=\"#\">Adicionar Clínica</a>\n\t\t\t<a class=\"nav-link\" href=\"#\">Editar Conta</a>\n\t\t\t<a class=\"nav-link\" href=\"#\">Lista de Despesas</a>\n\t\t\t<a class=\"nav-link\" href=\"#\">Lista LabPPR</a>\n\t\t\t<a class=\"nav-link\" href=\"#\">Lista LabPivo</a>\n\t\t</div>\n\t\t<ul class=\"navbar-nav mr-auto\">\n\t\t</ul>\n\t\t<button class=\"btn btn-primary\" (click)=\"logout()\">Sair</button>\n\t</div>\n</nav>\n<div class=\"container-fluid\">\n\t<router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core'\nimport { AdmComponent } from './adm.component'\nimport { Routes, RouterModule } from '@angular/router'\nimport { SharedModule } from '../shared/shared.module'\nimport { ClinicModule } from '../clinics/clinic.module'\nimport { ClinicsComponent } from '../clinics/clinics/clinics.component'\nimport { ClinicsResolver } from '../clinics/clinics/clinics.resolver'\nimport { ClinicComponent } from '../clinics/clinic/clinic.component'\nimport { ClinicResolver } from '../clinics/clinic/clinic.resolver'\n\nconst routes: Routes = [\n\t{\n\t\tpath: '', component: AdmComponent, children: [\n\t\t\t{ path: 'clinicas', component: ClinicsComponent, resolve: { clinics: ClinicsResolver } },\n\t\t\t{ path: ':id', component: ClinicComponent, resolve: { clinic: ClinicResolver } }\n\t\t]\n\t},\n]\n\n@NgModule({\n\tdeclarations: [\n\t\tAdmComponent,\n\t],\n\timports: [\n\t\tRouterModule.forChild(routes),\n\t\tSharedModule,\n\t\tClinicModule\n\t]\n})\nexport class AdmModule { }\n","import { NgModule } from '@angular/core'\nimport { SharedModule } from '../shared/shared.module'\nimport { ClinicsComponent } from './clinics/clinics.component'\nimport { ClinicComponent } from './clinic/clinic.component'\n\n@NgModule({\n\tdeclarations: [\n\t\tClinicsComponent,\n\t\tClinicComponent\n\t],\n\timports: [\n\t\tSharedModule\n\t],\n\texports: [\n\t\tClinicsComponent,\n\t\tClinicComponent\n\t]\n})\nexport class ClinicModule { }\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { ClinicModel } from 'src/app/models/clinic.model'\nimport { tap } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ClinicService {\n\n\treadonly getClinicsUrl = '/api/clinicas'\n\treadonly getClinicUrl = '/api/clinicas/'\n\n\tconstructor (private http: HttpClient, private router: Router) { }\n\n\tgetClinics () {\n\t\treturn this.http.get<ClinicModel[]>(this.getClinicsUrl)\n\t}\n\n\tgetClinic (id: string) {\n\t\treturn this.http.get<ClinicModel>(this.getClinicUrl + id)\n\t}\n}\n","import { Component, OnInit } from '@angular/core'\nimport { ClinicModel } from 'src/app/models/clinic.model'\n\n@Component({\n\tselector: 'app-clinic',\n\ttemplateUrl: './clinic.component.html',\n\tstyleUrls: ['./clinic.component.css']\n})\nexport class ClinicComponent implements OnInit {\n\n\tclinic: ClinicModel = null\n\n\tconstructor () { }\n\n\tngOnInit (): void {\n\n\t}\n\n}\n","<p>clinic works!</p>\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'\nimport { ClinicModel } from 'src/app/models/clinic.model'\nimport { Observable } from 'rxjs'\nimport { ClinicService } from '../clinic.service'\nimport { Injectable } from '@angular/core'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ClinicResolver implements Resolve<ClinicModel>{\n\n\tconstructor (private clinicService: ClinicService) { }\n\n\tresolve (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): ClinicModel | Observable<ClinicModel> | Promise<ClinicModel> {\n\t\treturn this.clinicService.getClinic(route.params.id)\n\t}\n}","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Data, Router } from '@angular/router'\nimport { ClinicModel } from '../../../models/clinic.model'\nimport { AuthService } from '../../auth/auth.service'\n\n@Component({\n\tselector: 'app-clinics',\n\ttemplateUrl: './clinics.component.html',\n\tstyleUrls: ['./clinics.component.css']\n})\nexport class ClinicsComponent implements OnInit {\n\n\tclinics: ClinicModel[]\n\tconstructor (private route: ActivatedRoute, private router: Router, private auth: AuthService) { }\n\n\tngOnInit (): void {\n\t\tthis.route.data.subscribe((data: Data) => {\n\t\t\tthis.clinics = data.clinics\n\t\t})\n\t}\n}\n","<h3>Clinicas:</h3>\n<div class=\"row\">\n\t<div class=\"col-2\" *ngFor=\"let clinic of clinics\">\n\t\t<div class=\"clinic-detail\" [routerLink]=\"['/admin/' + clinic._id]\">\n\t\t\t<h5>{{ clinic.name }}</h5>\n\t\t\t<p>Clientes: 9000</p>\n\t\t\t<p>Clientes: 9000</p>\n\t\t\t<p>Clientes: 9000</p>\n\t\t</div>\n\t</div>\n</div>\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router'\nimport { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { ClinicService } from '../clinic.service'\nimport { ClinicModel } from '../../../models/clinic.model'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ClinicsResolver implements Resolve<ClinicModel[]> {\n\n\tconstructor (private clinicService: ClinicService) { }\n\n\tresolve (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): ClinicModel[] | Observable<ClinicModel[]> | Promise<ClinicModel[]> {\n\t\treturn this.clinicService.getClinics()\n\t}\n\n}"],"sourceRoot":"webpack:///"}