{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/modules/auth/auth.guard.ts","webpack:///src/app/modules/auth/auth.module.ts","webpack:///src/app/modules/auth/auth.service.ts","webpack:///src/app/modules/auth/login/login.component.ts","webpack:///src/app/modules/auth/login/login.component.html","webpack:///src/app/modules/shared/interceptors/universal-interceptor.service.ts","webpack:///src/app/modules/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","canLoad","loadChildren","m","AdmModule","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","withServerTransition","appId","declarations","bootstrap","AuthGuard","authService","router","route","state","handleAuth","childRoute","segments","isLoggedIn","pipe","user","navigate","providedIn","AuthModule","AuthService","http","currentUser","loginUrl","logoutUrl","isLoggedInUrl","form","post","subscribe","response","console","log","JSON","stringify","get","isAdm","LoginComponent","loginForm","username","required","password","login","value","logout","UniversalInterceptorService","serverUrl","next","url","serverReq","clone","handle","SharedModule","providers","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { AuthGuard } from './modules/auth/auth.guard'\nimport { LoginComponent } from './modules/auth/login/login.component'\n\nconst routes: Routes = [\n\t{ path: '', pathMatch: 'full', redirectTo: 'login' },\n\t{ path: 'login', component: LoginComponent },\n\t{ path: 'admin', canLoad: [AuthGuard], loadChildren: () => import('./modules/adm/adm.module').then(m => m.AdmModule) }\n]\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core'\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\ttitle = 'sistema-clinicas';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { AppComponent } from './app.component'\nimport { SharedModule } from './modules/shared/shared.module'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AuthModule } from './modules/auth/auth.module'\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tBrowserModule.withServerTransition({ appId: 'my-app' }),\n\t\tAppRoutingModule,\n\t\tSharedModule,\n\t\tAuthModule\n\t],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CanLoad, CanActivate, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivateChild, Router } from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { AuthService } from './auth.service'\nimport { map, tap } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthGuard implements CanLoad, CanActivate, CanActivateChild {\n\n\tconstructor (private authService: AuthService, private router: Router) { }\n\n\tcanActivate (route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n\t\tboolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\t\treturn this.handleAuth()\n\t}\n\n\tcanActivateChild (childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n\t\tboolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\t\treturn this.handleAuth()\n\t}\n\n\tcanLoad (route: Route, segments: UrlSegment[]):\n\t\tboolean | Observable<boolean> | Promise<boolean> {\n\t\treturn this.handleAuth()\n\t}\n\n\thandleAuth () {\n\t\treturn this.authService.isLoggedIn().pipe(\n\t\t\ttap((user) => {\n\t\t\t\tif (!user) {\n\t\t\t\t\tthis.router.navigate(['login'])\n\t\t\t\t}\n\t\t\t})\n\t\t)\n\t}\n}","import { NgModule } from '@angular/core'\nimport { LoginComponent } from './login/login.component'\nimport { SharedModule } from '../shared/shared.module'\n\n@NgModule({\n\tdeclarations: [\n\t\tLoginComponent\n\t],\n\timports: [\n\t\tSharedModule\n\t]\n})\nexport class AuthModule { }","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { User } from '../../models/user.model'\nimport { map, tap } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate currentUser: User = null\n\n\treadonly loginUrl = '/api/auth/login'\n\treadonly logoutUrl = '/api/auth/logout'\n\treadonly isLoggedInUrl = '/api/auth/is-logged-in'\n\n\tconstructor (private http: HttpClient, private router: Router) { }\n\n\tlogin (form: { username: string, password: string }) {\n\t\tthis.http.post<User>(this.loginUrl, form).subscribe((response: User) => {\n\t\t\tthis.currentUser = response\n\t\t\tconsole.log('Login: \\n' + JSON.stringify(response))\n\t\t\tthis.router.navigate(['admin', 'clinicas'])\n\t\t})\n\t}\n\n\tlogout () {\n\t\tthis.http.get(this.logoutUrl).subscribe(() => {\n\t\t\tthis.currentUser = null\n\t\t\tthis.router.navigate(['login'])\n\t\t})\n\t}\n\n\tisLoggedIn () {\n\t\treturn this.http.get<User>(this.isLoggedInUrl).pipe(\n\t\t\ttap((user) => {\n\t\t\t\tthis.currentUser = user\n\t\t\t}),\n\t\t\tmap((user) => {\n\t\t\t\treturn !!user\n\t\t\t}),\n\t\t)\n\t}\n\n\tisAdm () {\n\t\treturn this.currentUser.isAdm\n\t}\n}","import { Component } from '@angular/core'\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { AuthService } from '../auth.service'\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\tloginForm: FormGroup = new FormGroup({\n\t\tusername: new FormControl('', [Validators.required]),\n\t\tpassword: new FormControl('', [Validators.required])\n\t})\n\n\tconstructor (private authService: AuthService) { }\n\n\tlogin () {\n\t\tthis.authService.login(this.loginForm.value)\n\t}\n\n\tlogout () {\n\t\tthis.authService.logout()\n\t}\n\n\tisLoggedIn () {\n\t\tthis.authService.isLoggedIn()\n\t}\n}","<div class=\"row justify-content-center\">\n\t<div class=\"col-sm-5 col-lg-4 col-xl-3\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12\">\n\t\t\t\t<h2>Sistema Clínicas</h2>\n\t\t\t</div>\n\t\t</div>\n\t\t<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n\t\t\t<div class=\"row\" id=\"login\">\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<div class=\"form-row justify-content-center\">\n\t\t\t\t\t\t<div class=\"form-group col-11\">\n\t\t\t\t\t\t\t<label for=\"username\">Conta:</label>\n\t\t\t\t\t\t\t<input type=\"text\" id=\"username\" class=\"form-control\" autocomplete=\"username\" maxLength=20 formControlName=\"username\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-row justify-content-center\">\n\t\t\t\t\t\t<div class=\"form-group col-11\">\n\t\t\t\t\t\t\t<label for=\"password\">Senha:</label>\n\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" class=\"form-control\" autocomplete=\"current-password\" maxLength=20 formControlName=\"password\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-row justify-content-center\">\n\t\t\t\t\t\t<div class=\"form-group col-11\">\n\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Entrar</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t\t<button (click)=\"logout()\">logout</button>\n\t\t<button (click)=\"isLoggedIn()\">is</button>\n\t</div>\n</div>\n","import {\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Inject, Injectable, Optional } from '@angular/core';\n\n@Injectable()\nexport class UniversalInterceptorService implements HttpInterceptor {\n  constructor(@Optional() @Inject('serverUrl') protected serverUrl: string) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    console.log(`intercepting the url ${req.url}`);\n    const serverReq = !this.serverUrl\n      ? req\n      : req.clone({\n          url: `${this.serverUrl}${req.url}`\n        });\n\n    return next.handle(serverReq);\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { NgModule } from '@angular/core'\nimport { UniversalInterceptorService } from './interceptors/universal-interceptor.service'\nimport { HttpClientModule } from '@angular/common/http'\nimport { RouterModule } from '@angular/router'\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t\tRouterModule\n\t],\n\tproviders: [UniversalInterceptorService],\n\tdeclarations: [],\n\texports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t\tRouterModule\n\t]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}