{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/auth/auth.guard.ts","./src/app/modules/auth/auth.module.ts","./src/app/modules/auth/auth.service.ts","./src/app/modules/auth/login/login.component.ts","./src/app/modules/auth/login/login.component.html","./src/app/modules/shared/interceptors/universal-interceptor.service.ts","./src/app/modules/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { AuthGuard } from './modules/auth/auth.guard'\nimport { LoginComponent } from './modules/auth/login/login.component'\n\nconst routes: Routes = [\n\t{ path: '', pathMatch: 'full', redirectTo: 'login' },\n\t{ path: 'login', component: LoginComponent },\n\t{ path: 'admin', canLoad: [AuthGuard], loadChildren: () => import('./modules/adm/adm.module').then(m => m.AdmModule) }\n]\n\n@NgModule({\n\timports: [RouterModule.forRoot(routes)],\n\texports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core'\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\ttitle = 'sistema-clinicas';\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\n\nimport { AppComponent } from './app.component'\nimport { SharedModule } from './modules/shared/shared.module'\nimport { AppRoutingModule } from './app-routing.module'\nimport { AuthModule } from './modules/auth/auth.module'\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tBrowserModule.withServerTransition({ appId: 'my-app' }),\n\t\tAppRoutingModule,\n\t\tSharedModule,\n\t\tAuthModule\n\t],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CanLoad, CanActivate, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivateChild, Router } from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { Injectable } from '@angular/core'\nimport { AuthService } from './auth.service'\nimport { map, tap } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthGuard implements CanLoad, CanActivate, CanActivateChild {\n\n\tconstructor (private authService: AuthService, private router: Router) { }\n\n\tcanActivate (route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n\t\tboolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\t\treturn this.handleAuth()\n\t}\n\n\tcanActivateChild (childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n\t\tboolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\t\treturn this.handleAuth()\n\t}\n\n\tcanLoad (route: Route, segments: UrlSegment[]):\n\t\tboolean | Observable<boolean> | Promise<boolean> {\n\t\treturn this.handleAuth()\n\t}\n\n\thandleAuth () {\n\t\treturn this.authService.isLoggedIn().pipe(\n\t\t\ttap((user) => {\n\t\t\t\tif (!user) {\n\t\t\t\t\tthis.router.navigate(['login'])\n\t\t\t\t}\n\t\t\t})\n\t\t)\n\t}\n}","import { NgModule } from '@angular/core'\nimport { LoginComponent } from './login/login.component'\nimport { SharedModule } from '../shared/shared.module'\n\n@NgModule({\n\tdeclarations: [\n\t\tLoginComponent\n\t],\n\timports: [\n\t\tSharedModule\n\t]\n})\nexport class AuthModule { }","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { User } from '../../models/user.model'\nimport { map, tap } from 'rxjs/operators'\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate currentUser: User = null\n\n\treadonly loginUrl = '/api/auth/login'\n\treadonly logoutUrl = '/api/auth/logout'\n\treadonly isLoggedInUrl = '/api/auth/is-logged-in'\n\n\tconstructor (private http: HttpClient, private router: Router) { }\n\n\tlogin (form: { username: string, password: string }) {\n\t\tthis.http.post<User>(this.loginUrl, form).subscribe((response: User) => {\n\t\t\tthis.currentUser = response\n\t\t\tconsole.log('Login: \\n' + JSON.stringify(response))\n\t\t\tthis.router.navigate(['admin', 'clinicas'])\n\t\t})\n\t}\n\n\tlogout () {\n\t\tthis.http.get(this.logoutUrl).subscribe(() => {\n\t\t\tthis.currentUser = null\n\t\t\tthis.router.navigate(['login'])\n\t\t})\n\t}\n\n\tisLoggedIn () {\n\t\treturn this.http.get<User>(this.isLoggedInUrl).pipe(\n\t\t\ttap((user) => {\n\t\t\t\tthis.currentUser = user\n\t\t\t}),\n\t\t\tmap((user) => {\n\t\t\t\treturn !!user\n\t\t\t}),\n\t\t)\n\t}\n\n\tisAdm () {\n\t\treturn this.currentUser.isAdm\n\t}\n}","import { Component } from '@angular/core'\nimport { FormGroup, FormControl, Validators } from '@angular/forms'\nimport { AuthService } from '../auth.service'\n\n@Component({\n\tselector: 'app-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\tloginForm: FormGroup = new FormGroup({\n\t\tusername: new FormControl('', [Validators.required]),\n\t\tpassword: new FormControl('', [Validators.required])\n\t})\n\n\tconstructor (private authService: AuthService) { }\n\n\tlogin () {\n\t\tthis.authService.login(this.loginForm.value)\n\t}\n\n\tlogout () {\n\t\tthis.authService.logout()\n\t}\n\n\tisLoggedIn () {\n\t\tthis.authService.isLoggedIn()\n\t}\n}","<div class=\"row justify-content-center\">\n\t<div class=\"col-sm-5 col-lg-4 col-xl-3\">\n\t\t<div class=\"row\">\n\t\t\t<div class=\"col-12\">\n\t\t\t\t<h2>Sistema Clínicas</h2>\n\t\t\t</div>\n\t\t</div>\n\t\t<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\n\t\t\t<div class=\"row\" id=\"login\">\n\t\t\t\t<div class=\"col-12\">\n\t\t\t\t\t<div class=\"form-row justify-content-center\">\n\t\t\t\t\t\t<div class=\"form-group col-11\">\n\t\t\t\t\t\t\t<label for=\"username\">Conta:</label>\n\t\t\t\t\t\t\t<input type=\"text\" id=\"username\" class=\"form-control\" autocomplete=\"username\" maxLength=20 formControlName=\"username\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-row justify-content-center\">\n\t\t\t\t\t\t<div class=\"form-group col-11\">\n\t\t\t\t\t\t\t<label for=\"password\">Senha:</label>\n\t\t\t\t\t\t\t<input type=\"password\" id=\"password\" class=\"form-control\" autocomplete=\"current-password\" maxLength=20 formControlName=\"password\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-row justify-content-center\">\n\t\t\t\t\t\t<div class=\"form-group col-11\">\n\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!loginForm.valid\">Entrar</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</form>\n\t\t<button (click)=\"logout()\">logout</button>\n\t\t<button (click)=\"isLoggedIn()\">is</button>\n\t</div>\n</div>\n","import {\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest\n} from '@angular/common/http';\nimport { Inject, Injectable, Optional } from '@angular/core';\n\n@Injectable()\nexport class UniversalInterceptorService implements HttpInterceptor {\n  constructor(@Optional() @Inject('serverUrl') protected serverUrl: string) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    console.log(`intercepting the url ${req.url}`);\n    const serverReq = !this.serverUrl\n      ? req\n      : req.clone({\n          url: `${this.serverUrl}${req.url}`\n        });\n\n    return next.handle(serverReq);\n  }\n}\n","import { CommonModule } from '@angular/common'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { NgModule } from '@angular/core'\nimport { UniversalInterceptorService } from './interceptors/universal-interceptor.service'\nimport { HttpClientModule } from '@angular/common/http'\nimport { RouterModule } from '@angular/router'\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t\tRouterModule\n\t],\n\tproviders: [UniversalInterceptorService],\n\tdeclarations: [],\n\texports: [\n\t\tCommonModule,\n\t\tReactiveFormsModule,\n\t\tHttpClientModule,\n\t\tRouterModule\n\t]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}